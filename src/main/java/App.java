import processing.core.PApplet;
import processing.core.PVector;
import processing.core.PImage;

import java.util.ArrayList;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App extends PApplet {
    private Asteroid asteroid;
    private ArrayList<Layer> layers;
    private Earth earth;
    PImage space;
    public static PImage green;
    private boolean left;
    private boolean right;
    public float groundHeight = 4*height/5;

    public void setup() {
        frameRate(120);
        ImageLoader.loadImageAsset("green.jpg", "green", this, 1, 1);
        ImageLoader.loadImageAsset("cloud1.png", "cloud", this, 100, 50);
        ImageLoader.loadImageAsset("wind1.png", "wind", this, 150, 75);
        layers = new ArrayList<>();
        layers.add(new SpaceLayer(0, height / 5));
        layers.add(new WindLayer(height / 5, 2 * height / 5));
        layers.add(new CloudLayer(2 * height / 5, 3 * height / 5));
        layers.add(new EmptyLayer(3 * height / 5, 4 * height / 5));
        asteroid = new Asteroid((float)((Math.random() * width*2/3) + width/6), 0, width / 48);
        earth = new Earth(4 * height / 5, height, this);

        left = false;
        right = false;

//        space = loadImage("space.jpg");
//        space.resize(width, height/5);
//        green = loadImage("green.jpg");

    }

    public void draw() {
        /*clear();

        //asteroid.setPosition(new PVector(width/2, 4*height/5));
        for(Layer layer: layers) layer.draw(this);

        earth.draw(this);
        asteroid.draw(this);

        earth.explode(asteroid);
        asteroid.reset();*/

        clear();
        earth.update(this);
        // User movement
        if (left || right) {
            asteroid.userMove(left, this);
        }

        asteroid.update(this);


        for(Layer layer: layers){
//            if(layer.getClass() != CloudLayer.class && layer.getClass() != WindLayer.class) layer.modify(asteroid);
//            else ((CloudLayer)layer).modify(this);
            layer.modify(this);

        }
        for(Layer layer: layers) layer.draw(this);

        earth.draw(this);
        asteroid.draw(this);

    }

    public PImage getImage(String i) {
        switch (i) {
            case "space":
                return space;
            default:
                return null;
        }

    }


    public void settings() {
        fullScreen();
    }

    public static void main(String[] args) {
        PApplet.main(App.class);
    }

    public Asteroid getAsteroid() {
        return asteroid;
    }

    public ArrayList<Layer> getLayers() {
        return layers;
    }

    public void setAsteroid (Asteroid a) {
        this.asteroid = a;
    }

    //Sets booleans for keys
    public void keyPressed() {
        if (key == CODED) {
            if (keyCode == LEFT) {
                left = true;
            } else if (keyCode == RIGHT) {
                right = true;
            }
        }
    }

    //Removes true booleans when key released
    public void keyReleased() {
        if (key == CODED) {
            if (keyCode == LEFT) {
                left = false;
                //asteroid.getVelocity().add(new PVector(-1,0));
                //cat.velLeft = new PVector(-3/2, 0);
            } else if (keyCode == RIGHT) {
                right = false;
                //asteroid.getVelocity().add(new PVector(1,0));
                //cat.velRight = new PVector(3/2, 0);
            }
        }
    }
}
